// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  emailVerified  DateTime? @map("email_verified")
  image          String?
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accounts       Account[]
  sessions       Session[]

  displayName     String?
  defaultCurrency String?
  timezone        String?

  subscriptions Subscription[]

  @@map("users")
}

model Subscription {
  id               String   @id @default(cuid())
  name             String
  priceCents       Int      // store money as integer cents
  currency         String   // e.g., "USD", "ILS"
  billingInterval  String   // "monthly" | "yearly" (can refactor to enum later)
  nextRenewalDate  DateTime
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // (Optional) owner
  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}